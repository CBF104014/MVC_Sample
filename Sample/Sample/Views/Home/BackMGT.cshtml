@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container" id="BackMGT">
	<br />
	<div class="card card-body" id="AddGroup">
		<div class="form-group card-body row">
			<div class="col-md-5">
				<label data-bind="i18n: 'Pid'">產品編號</label>
				<input type="text" class="form-control" data-bind="value: Pid">
				<label data-bind="i18n: 'Pname'">產品名稱</label>
				<input type="text" class="form-control" data-bind="value: Pname">
				<label data-bind="i18n: 'Price'">單價</label>
				<input type="number" class="form-control" data-bind="value: Price">
				<label data-bind="i18n: 'Description'">產品描述</label>
				<textarea class="form-control" data-bind="value: Description"></textarea>
			</div>
			<div class="col-md-7">
				<label data-bind="i18n: 'ImagePreview'"></label>
				<div class="card card-body" style="height: 300px;">
					<img class="h-100" src="" data-bind="attr: { src: ImgSrc }" />
				</div>
				<div class="custom-file mt-2">
					<input type="file" class="custom-file-input" id="customFileLang" data-bind="event:{ change: ()=>{ GetBinary($element) } }">
					<label class="custom-file-label" for="customFileLang" data-browse="上傳圖檔" data-bind="text: ImgText">選擇上傳</label>
				</div>
			</div>
			
		</div>
		<button type="button" class="btn btn-primary" data-bind="click: AddProduct">
			<i class="fa fa-plus-circle"></i> 
			<span data-bind="i18n: 'Add'"></span>
		</button>
	</div>
	<br />

	<div class="card-body" id="ProductList">
		<table class="table table-hover">
			<thead>
				<tr>
					<th scope="col" data-bind="i18n: 'Pid'"></th>
					<th scope="col" data-bind="i18n: 'Pname'"></th>
					<th scope="col" data-bind="i18n: 'Price'"></th>
					<th scope="col" data-bind="i18n: 'Description'"></th>
					<th scope="col" data-bind="i18n: 'Image'"></th>
					<th scope="col">-</th>
				</tr>
			</thead>
			<tbody data-bind="foreach: Products">
				<tr>
					<th data-bind="text: Pid"></th>
					<td data-bind="text: Pname"></td>
					<td data-bind="text: Price"></td>
					<td data-bind="text: Description"></td>
					<td>
						<img src="" data-bind="attr: { src: ImgSrc }" style="width: 100px;" />
					</td>
					<td>
						<button type="button" class="btn btn-outline-danger" data-bind="click: ProductDel, i18n: 'Delete'"></button>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</div>
<script>
	(function () {
		var Product = function(Obj){
			var self = this;
			self.Pid = ko.observable(Obj.Pid);
			self.Pname = ko.observable(Obj.Pname);
			self.Price = ko.observable(Obj.Price);
			self.Description = ko.observable(Obj.Description);
			self.Binarys = ko.observable(Obj.Binarys);
			self.ImgSrc = ko.observable('data:image/gif;base64,' + self.Binarys());
			self.ProductDel = function () {
				alert('delete');
			}
		}

		var AddGroup = function () {
			var self = this;
			self.Pid = ko.observable('').extend({ required: true });
			self.Pname = ko.observable('').extend({ required: true });
			self.Price = ko.observable('').extend({ required: true });
			self.Description = ko.observable('').extend({ required: true });
			self.Binarys = ko.observable('').extend({ required: true });
			self.ImgText = ko.observable('');
			self.ImgSrc = ko.observable('');
			self.GetBinary = function (_data) {
				self.ImgText(_data.files[0].name);
				var File = _data.files[0];
				var reader = new FileReader();
				reader.readAsDataURL(File);
				reader.onload = function (e) {
					var fileobj = reader.result.split("base64,")[1];
					self.Binarys(fileobj);
					 var fileURL = URL.createObjectURL(File); 
					self.ImgSrc(fileURL);
				};
			}
			self.AddProduct = function () {
				if (!validate(self)) return;
				$.ajax({
					type: 'Post',
					url: '../Home/BackMGT',
					data: ko.toJSON(self),
					contentType: 'application/json; charset=utf-8',
					dataType: 'json',
					success: function (data) {
						if (data == 1)
							alert('成功');
						else
							alert('失敗');
						console.log(data);
					},
					failure: function (errMsg) {
						console.log(errMsg);
					}
				});
			}
			
		};

		var ProductList = function(){
			var self = this;
			self.Products = ko.observableArray([]);
			self.GetProducts = ko.computed(function () {
				$.ajax({
					type: 'Post',
					url: '../Home/BackMGT',
					data: '',
					contentType: 'application/json; charset=utf-8',
					dataType: 'json',
					success: function (rs) {
						var data = JSON.parse(rs);
						for (var i = 0; i < data.length; i++) {
							self.Products.push(new Product({
								Pid: data[i].Pid,
								Pname: data[i].Pname,
								Price: data[i].Price,
								Description: data[i].Description,
								Binarys: data[i].Binarys,
							}));
						}
					},
					failure: function (errMsg) {
						console.log(-999);
					}
				});
			});
		}

		setTimeout(function () {
			ko.applyBindings(new AddGroup(), document.getElementById('AddGroup'));
			ko.applyBindings(new ProductList(), document.getElementById('ProductList'));
		}, 100);
		
	})();

/*
 * 資料base64轉為ArrayBuffer
 * 用法:
 * base64ToArrayBuffer(bytes);
 *
 */
	function base64ToArrayBuffer(base64) {
		var binaryString = window.atob(base64);
		var binaryLen = binaryString.length;
		var bytes = new Uint8Array(binaryLen);
		for (var i = 0; i < binaryLen; i++) {
			var ascii = binaryString.charCodeAt(i);
			bytes[i] = ascii;
		}
		return bytes;
	};


/*
 * 資料下載
 * 用法:
 * saveByteArray('契約範本', 'pdf', bytes);
 * 
 */
	function saveByteArray(filename, type, byte) {
		var blob = new Blob([byte], { type: `application/${type}` });
		var link = document.createElement('a');
		link.href = window.URL.createObjectURL(blob);
		link.download = `${filename}.${type}`;
		link.click();
	};
</script>